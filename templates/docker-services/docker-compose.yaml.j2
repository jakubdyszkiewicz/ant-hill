---
version: "2"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    tag: "{% raw %}{{ .Name }}{% endraw %}"

services:
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - /mnt/data/services/plex:/config
      - /mnt/media/movies:/movies
      - /mnt/media/tvshows:/tvshows
    logging: *default-logging
    restart: unless-stopped
  syncthing:
    image: linuxserver/syncthing
    container_name: syncthing
    volumes:
      - /mnt/data/services/syncthing:/config
      - /mnt/data/sync:/mnt/data/sync
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    logging: *default-logging
  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    volumes:
      - /mnt/data/services/nzbget:/config
      - /mnt/media/downloads:/downloads
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    ports:
      - 6789:6789
    logging: *default-logging
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=PST
      - UMASK_SET=022 #optional
    volumes:
      - /mnt/data/services/sonarr:/config
      - /mnt/media/tvshows:/mnt/media
      - /mnt/media/downloads:/downloads
    ports:
      - 8989:8989
    logging: *default-logging
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=PST
    volumes:
      - /mnt/data/services/radarr:/config
      - /mnt/media/movies:/mnt/media
      - /mnt/media/downloads:/downloads
    ports:
      - 7878:7878
    logging: *default-logging
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    network_mode: host
    environment:
      - TZ=Europe/Warsaw
      - WEBPASSWORD=piholepasswd
      - WEB_PORT=7080
      - DNSMASQ_LISTENING=single
      - INTERFACE=enp1s0
      - CORS_HOSTS=pihole.{{ ant_domain }}
    volumes:
      - /mnt/data/services/pihole:/etc/pihole
      - /mnt/data/services/dnsmasq:/etc/dnsmasq.d
    logging: *default-logging
    restart: unless-stopped
  ddclient:
    image: lscr.io/linuxserver/ddclient
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /home/{{ ansible_user }}/docker-services/ddclient:/config
    logging: *default-logging
    restart: unless-stopped
  duplicacy:
    container_name: duplicacy
    image: saspus/duplicacy-web
    hostname: duplicacy-web
    restart: unless-stopped
    ports:
      - 3875:3875
    environment:
      - USR_ID=1000
      - GRP_ID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /mnt/data/services/duplicacy:/config
      - /home/jakub/docker-services/duplicacy/cache:/cache
      - /home/jakub/docker-services/duplicacy/logs:/logs
      - /mnt/data:/data:ro
    logging: *default-logging
  gickup:
    container_name: gickup
    image: buddyspencer/gickup:latest
    user: '1000:1000'
    volumes:
      - /home/{{ ansible_user }}/docker-services/gickup/conf.yml:/gickup/conf.yml
      - /mnt/data/gickup:/data
    command: ["./gickup/app", "/gickup/conf.yml"]
    logging: *default-logging
  rclone:
    container_name: rclone
    image: rclone/rclone:latest
      #restart: unless-stopped
    user: '1000:1000'
    volumes:
      - /home/{{ ansible_user }}/docker-services/rclone:/config/rclone
      - /mnt/data/gdrive:/data
    entrypoint: ["/bin/sh", "-c"]
    command: ["while true; do echo 'Syncing...'; /usr/local/bin/rclone sync -v --drive-acknowledge-abuse gdrive:/ /data/; echo 'Sleeping for 1h'; sleep 3600; done"]
    logging: *default-logging
  kong:
    image: kong
    user: root
    container_name: kong
    network_mode: host
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_PROXY_LISTEN=0.0.0.0:80, 0.0.0.0:443 ssl
      - KONG_SSL_CERT=/certs/keys/letsencrypt/fullchain.pem
      - KONG_SSL_CERT_KEY=/certs/keys/letsencrypt/privkey.pem
    volumes:
      - /home/{{ ansible_user }}/docker-services/kong:/usr/local/kong/declarative
      - /home/{{ ansible_user }}/docker-services/swag:/certs
    restart: unless-stopped
    logging: *default-logging
  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
      - URL={{ ant_domain }} 
      - VALIDATION=dns
      - PROPAGATION=60
      - SUBDOMAINS=wildcard
      - DNSPLUGIN=ovh
      - "EMAIL=jakub.dyszkiewicz@gmail.com"
      - STAGING=false
    volumes:
      - /home/{{ ansible_user }}/docker-services/swag:/config
    restart: unless-stopped
    logging: *default-logging
  samba:
    image: crazymax/samba
    container_name: samba
    network_mode: host
    volumes:
      - /home/{{ ansible_user }}/docker-services/samba:/data
      - /mnt/data/nas:/nas
      - /mnt/data/backup/timemachine:/timemachine
    environment:
      - TZ=Europe/Warsaw
      - SAMBA_LOG_LEVEL=0
    restart: unless-stopped
    logging: *default-logging
  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    logging: *default-logging
  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    user: '1000:1000'
    volumes:
      - /home/{{ ansible_user }}/docker-services/prometheus:/etc/prometheus
      - /home/{{ ansible_user }}/docker-services/data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15000h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    expose:
      - 9090
    logging: *default-logging
  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    user: '1000:1000'
    volumes:
      - /home/{{ ansible_user }}/docker-services/data/grafana:/var/lib/grafana
      - /mnt/data/services/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin # todo remove password and expose only via Kong
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    restart: unless-stopped
  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.34.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    expose:
      - 8080
    logging: *default-logging
  speedtest:
    image: ghcr.io/danopstech/speedtest_exporter:latest
    container_name: speedtest
    restart: unless-stopped
    expose:
      - 9090
    logging: *default-logging
  promtail:
    image: grafana/promtail:2.4.2
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /home/{{ ansible_user }}/docker-services/promtail/docker-config.yml:/etc/promtail/docker-config.yml
    command: -config.file=/etc/promtail/docker-config.yml
    logging: *default-logging
  loki:
    image: grafana/loki:2.4.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging: *default-logging