---
version: "2"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    tag: "{% raw %}{{ .Name }}{% endraw %}"

services:
  plex:
    image: linuxserver/plex:1.30.1
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    ports:
      - 32400:32400
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    volumes:
      - /mnt/data/services/plex:/config
      - /mnt/media/movies:/movies
      - /mnt/media/tvshows:/tvshows
      - /mnt/media/music:/music
    logging: *default-logging
    restart: unless-stopped
  syncthing:
    image: linuxserver/syncthing:1.23.0
    container_name: syncthing
    volumes:
      - /mnt/data/services/syncthing:/config
      - /mnt/data/sync:/mnt/data/sync
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    expose:
      - 8343
    logging: *default-logging
  nzbget:
    image: linuxserver/nzbget:21.1.20230119
    container_name: nzbget
    volumes:
      - /mnt/data/services/nzbget:/config
      - /home/{{ ansible_user }}/docker-services/data/downloads:/downloads
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    expose:
      - 6789
    logging: *default-logging
  sonarr:
    image: linuxserver/sonarr:3.0.9
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=PST
      - UMASK_SET=022 #optional
    volumes:
      - /mnt/data/services/sonarr:/config
      - /mnt/media/tvshows:/mnt/media/tvshows
      - /home/{{ ansible_user }}/docker-services/data/downloads:/downloads
    expose:
      - 8989
    logging: *default-logging
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr:4.3.2
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=PST
    volumes:
      - /mnt/data/services/radarr:/config
      - /mnt/media/movies:/mnt/media/movies
      - /home/{{ ansible_user }}/docker-services/data/downloads:/downloads
    expose:
      - 7878
    logging: *default-logging
    restart: unless-stopped
  lidarr:
    image: linuxserver/lidarr:1.0.2
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=PST
      - UMASK_SET=022 #optional
    volumes:
      - /mnt/data/services/lidarr:/config
      - /mnt/media/music:/mnt/media
      - /home/{{ ansible_user }}/docker-services/data/downloads:/downloads
    expose:
      - 8686
    logging: *default-logging
    restart: unless-stopped
  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=PST
      - UMASK_SET=022 #optional
    volumes:
      - /mnt/data/services/readarr:/config
      - /mnt/media/books:/mnt/media
      - /home/{{ ansible_user }}/docker-services/data/downloads:/downloads
    expose:
      - 8787
    logging: *default-logging
    restart: unless-stopped
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
      - UMASK_SET=022 #optional
    volumes:
      - /mnt/data/services/bazarr:/config
      - /mnt/media/tvshows:/mnt/media/tvshows # this path has to be the same as in Sonarr
      - /mnt/media/movies:/mnt/media/movies # # this path has to be the same as in Radarr
    expose:
      - 6767
    logging: *default-logging
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:2023.01.6
    environment:
      - TZ=Europe/Warsaw
      - WEBPASSWORD=piholepasswd
      - WEB_PORT=7080
      - CORS_HOSTS=pihole.{{ ant_domain }}
    ports: # bind only to specific network interface, 0.0.0.0 has a clash with builtin Ubuntu systemd caching DNS on 127.0.0.1
      - "{{ inventory_hostname }}:53:53/tcp"
      - "{{ inventory_hostname }}:53:53/udp"
      - "7080:7080/tcp" # do not hide it in Kong yet. I need DNS to access all services in local network
    volumes:
      - /mnt/data/services/pihole:/etc/pihole
      - /mnt/data/services/dnsmasq:/etc/dnsmasq.d
    logging: *default-logging
    restart: unless-stopped
  ddclient:
    image: linuxserver/ddclient:3.10.0
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /home/{{ ansible_user }}/docker-services/ddclient:/config
    logging: *default-logging
    restart: unless-stopped
  duplicacy:
    image: saspus/duplicacy-web:v1.6.3
    container_name: duplicacy
    hostname: duplicacy-web
    restart: unless-stopped
    expose:
      - 3875
    environment:
      - USR_ID=1000
      - GRP_ID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /mnt/data/services/duplicacy:/config
      - /home/jakub/docker-services/duplicacy/cache:/cache
      - /home/jakub/docker-services/duplicacy/logs:/logs
      - /mnt/data:/data:ro
    logging: *default-logging
  gickup:
    container_name: gickup
    image: buddyspencer/gickup:0.10.11
    restart: unless-stopped
    user: '1000:1000'
    volumes:
      - /home/{{ ansible_user }}/docker-services/gickup/conf.yml:/gickup/conf.yml
      - /mnt/data/gickup:/data
    logging: *default-logging
  rclone:
    container_name: rclone
    image: rclone/rclone:1.61.1
    restart: unless-stopped
    user: '1000:1000'
    volumes:
      - /home/{{ ansible_user }}/docker-services/rclone:/config/rclone
      - /mnt/data/gdrive:/data
    entrypoint: ["/bin/sh", "-c"]
    command: ["while true; do echo 'Syncing...'; /usr/local/bin/rclone sync -v --drive-acknowledge-abuse gdrive:/ /data/; echo 'Sleeping for 1h'; sleep 3600; done"]
    logging: *default-logging
  kong:
    image: kong:3.3.1
    user: '1000:1000'
    container_name: kong
    environment:
      - KONG_PREFIX=/tmp/ # the default /usr/local/kong is not writable by non-root user
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_LISTEN=0.0.0.0:8080, 0.0.0.0:8443 ssl
      - KONG_SSL_CERT=/certs/keys/letsencrypt/fullchain.pem
      - KONG_SSL_CERT_KEY=/certs/keys/letsencrypt/privkey.pem
    ports:
      - 443:8443
    volumes:
      - /home/{{ ansible_user }}/docker-services/kong:/usr/local/kong/declarative
      - /mnt/data/services/swag:/certs
    restart: unless-stopped
    logging: *default-logging
  swag:
    image: linuxserver/swag:1.32.0
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
      - URL={{ ant_domain }} 
      - VALIDATION=dns
      - PROPAGATION=60
      - SUBDOMAINS=wildcard
      - DNSPLUGIN=ovh
      - "EMAIL=jakub.dyszkiewicz@gmail.com"
      - STAGING=false
    volumes:
      - /mnt/data/services/swag:/config
    restart: unless-stopped
    logging: *default-logging
  samba:
    image: crazymax/samba:4.16.8
    container_name: samba
    volumes:
      - /home/{{ ansible_user }}/docker-services/samba:/data
      - /mnt/data/nas:/nas
      - /mnt/backup/timemachine:/timemachine
    environment:
      - TZ=Europe/Warsaw
      - SAMBA_LOG_LEVEL=0
    ports:
      - 445:445
    restart: unless-stopped
    logging: *default-logging
  nodeexporter:
    image: prom/node-exporter:v1.5.0
    container_name: nodeexporter
    network_mode: host # required to collect data about host network
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    logging: *default-logging
  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    user: '1000:1000'
    extra_hosts: # required to collect data from nodeexporter
      - "host.docker.internal:host-gateway"
    volumes:
      - /home/{{ ansible_user }}/docker-services/prometheus:/etc/prometheus
      - /home/{{ ansible_user }}/docker-services/data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15000h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    logging: *default-logging
  grafana:
    image: grafana/grafana:9.3.2
    container_name: grafana
    user: '1000:1000'
    volumes:
      - /home/{{ ansible_user }}/docker-services/data/grafana:/var/lib/grafana
      - /home/{{ ansible_user }}/docker-services/grafana:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true # secured via Kong
      - GF_AUTH_DISABLE_LOGIN_FORM=true # secured via Kong
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Editor
      - GF_USERS_ALLOW_SIGN_UP=false
    expose:
      - 3000
    restart: unless-stopped
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    expose:
      - 8080
    logging: *default-logging
  speedtest:
    image: ghcr.io/danopstech/speedtest_exporter:v0.0.5
    container_name: speedtest
    restart: unless-stopped
    expose:
      - 9090
    logging: *default-logging
  promtail:
    image: grafana/promtail:2.7.1
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /home/{{ ansible_user }}/docker-services/promtail/docker-config.yml:/etc/promtail/docker-config.yml
    command: -config.file=/etc/promtail/docker-config.yml
    logging: *default-logging
  loki:
    image: grafana/loki:2.7.1
    container_name: loki
    expose:
      - 3100
    command: -config.file=/etc/loki/local-config.yaml
    logging: *default-logging
  antui:
    image: jakubdyszkiewicz/ant-ui:0.0.1
    container_name: antui
    expose:
      - 80
    logging: *default-logging
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /home/{{ ansible_user }}/docker-services/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    ports:
      - 8123:8123
      - 21064:21064
  mdns-repeater:
    image: jdbeeler/mdns-repeater
    container_name: mdns-repeater
    restart: unless-stopped
    network_mode: host
    privileged: true
    environment:
      - EXTERNAL_INTERFACE=enp1s0
      - DOCKER_NETWORK_NAME=docker-services_default
      - USE_MDNS_REPEATER=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:2.0
    restart: unless-stopped
    volumes:
      - /mnt/data/services/mqtt:/mosquitto
    expose:
      - 1883
      - 9001
    command: "mosquitto -c /mosquitto-no-auth.conf"
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt
    volumes:
      - /mnt/data/services/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    expose:
      - 8080
    environment:
      - TZ=Europe/Warsaw
